import{GlobalWorkerOptions as n,getDocument as t}from"pdfjs-dist";var i=function(n,t,i,o){return new(i||(i=Promise))((function(e,s){function r(n){try{c(o.next(n))}catch(n){s(n)}}function d(n){try{c(o.throw(n))}catch(n){s(n)}}function c(n){var t;n.done?e(n.value):(t=n.value,t instanceof i?t:new i((function(n){n(t)}))).then(r,d)}c((o=o.apply(n,t||[])).next())}))};class o{constructor(t,i){this.onContainerResize=n=>{if(!n){const t=this._container.getBoundingClientRect();n={width:t.width,height:t.height}}const t=window.devicePixelRatio;this._viewCanvas.width=n.width*t,this._viewCanvas.height=n.height*t},this.onPdfLoadingProgress=n=>{console.log(`${n.loaded}/${n.total}`)},this.onPdfLoaded=n=>{this._pdfDocument=n,console.log(n)};const o=document.querySelector(t);if(!o)throw new Error("Container not found");if(!(o instanceof HTMLDivElement))throw new Error("Container is not a DIV element");if(this._container=o,!i)throw new Error("Worker source path not defined");n.workerSrc=i,this.initViewerGUI()}openPdfAsync(n){return i(this,void 0,void 0,(function*(){if(this._pdfLoadingTask)return yield this.closePdfAsync(),this.openPdfAsync(n);const i=t(n);this._pdfLoadingTask=i,i.onProgress=this.onPdfLoadingProgress,this.onPdfLoaded(yield i.promise)}))}closePdfAsync(){return i(this,void 0,void 0,(function*(){this._pdfLoadingTask&&(yield this._pdfLoadingTask.destroy(),this._pdfLoadingTask=null),this._pdfDocument&&(this._pdfDocument=null)}))}initViewerGUI(){const n=document.createElement("canvas");this._viewCanvas=n}}export{o as TsPdfViewer};
