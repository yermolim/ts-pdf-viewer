import { annotationTypes } from "../../../const";
import { getRandomUuid } from "../../../../common";
import { CryptInfo, Rect } from "../../../common-interfaces";
import { ParseInfo, ParseResult } from "../../../data-parser";

import { DateString } from "../../strings/date-string";
import { LiteralString } from "../../strings/literal-string";

import { XFormStream } from "../../streams/x-form-stream";
import { ResourceDict } from "../../appearance/resource-dict";
import { MarkupAnnotation } from "./markup-annotation";

export const stampTypes = {
  DRAFT: "/Draft",
  NOT_APPROVED: "/NotApproved",
  APPROVED: "/Approved",
  AS_IS: "/AsIs",
  FOR_COMMENT: "/ForComment",
  EXPERIMENTAL: "/Experimental",
  FINAL: "/Final",
  SOLD: "/Sold",
  EXPIRED: "/Expired",
  PUBLIC: "/ForPublicRelease",
  NOT_PUBLIC: "/NotForPublicRelease",
  DEPARTMENTAL: "/Departmental",
  CONFIDENTIAL: "/Confidential",
  SECRET: "/TopSecret",
} as const;
export type StampType = typeof stampTypes[keyof typeof stampTypes];

const stampBBox: Rect = [0, 0, 440, 120];
const halfStampBBox: Rect = [0, 0, 220, 60];

const redColorString = ".804 0 0 rg .804 0 0 RG";
const greenColorString = "0 .804 0 rg 0 .804 0 RG";
const blueColorString = "0 0 .804 rg 0 0 .804 RG";

const draftStampForm = 
`33.5 13.4 m
404.5 6.92 l
419.6 6.657 431.9 18.52 432.1 33.62 c
432.89 78.92 l
433.153 94.02 421.29 106.32 406.19 106.52 c
35.19 113 l
20.09 113.263 7.79 101.4 7.59 86.3 c
6.8 41 l
6.537 25.9 18.4 13.6 33.5 13.4 c
s
150 61 m
150.047 65.947 149.114 70.413 147.2 74.4 c
145.287 78.333 142.853 81.373 139.9 83.52 c
137.68 85.127 135.24 86.263 132.58 86.93 c
129.92 87.593 126.763 87.957 123.11 88.02 c
106.91 88.29 l
106.401 35.19 l
123.001 34.912 l
126.734 34.85 129.961 35.165 132.681 35.857 c
135.394 36.524 137.681 37.507 139.541 38.807 c
142.721 40.994 145.234 43.974 147.081 47.747 c
148.941 51.5 149.898 55.934 149.951 61.047 c
h
137.8 61.097 m
137.767 57.597 137.183 54.621 136.05 52.167 c
134.937 49.687 133.183 47.764 130.79 46.397 c
129.57 45.731 128.323 45.287 127.05 45.067 c
125.797 44.827 123.897 44.728 121.35 44.77 c
118.36 44.82 l
118.678 78.12 l
121.668 78.07 l
124.481 78.023 126.541 77.846 127.848 77.538 c
129.161 77.207 130.438 76.637 131.678 75.828 c
133.818 74.362 135.381 72.432 136.368 70.038 c
137.348 67.618 137.821 64.648 137.788 61.128 c
f
185 50 m
184.987 48.667 184.74 47.53 184.259 46.59 c
183.778 45.643 182.961 44.907 181.809 44.38 c
181.002 44.013 180.066 43.802 178.999 43.749 c
177.932 43.672 176.689 43.645 175.269 43.669 c
170.989 43.74 l
171.126 58.04 l
174.756 57.979 l
176.643 57.948 178.223 57.814 179.496 57.579 c
180.769 57.344 181.833 56.837 182.686 56.059 c
183.499 55.306 184.086 54.486 184.446 53.599 c
184.827 52.686 185.011 51.483 184.996 49.989 c
h
203.8 86.6 m
189.4 86.841 l
176.7 67.541 l
171.25 67.632 l
171.437 87.132 l
159.637 87.329 l
159.128 34.229 l
178.928 33.897 l
181.635 33.852 183.965 33.991 185.918 34.315 c
187.871 34.639 189.705 35.382 191.418 36.545 c
193.151 37.705 194.531 39.228 195.558 41.115 c
196.605 42.975 197.141 45.335 197.168 48.195 c
197.206 52.122 196.446 55.335 194.888 57.835 c
193.355 60.335 191.138 62.432 188.238 64.125 c
f
251 85.8 m
238.8 86.004 l
235.53 75.304 l
218.53 75.588 l
215.46 86.388 l
203.56 86.587 l
219.96 33.187 l
233.56 32.959 l
h
232.6 65.6 m
226.78 46.6 l
221.33 65.8 l
f
290 42.3 m
268.9 42.653 l
268.995 52.543 l
288.495 52.216 l
288.593 62.516 l
269.093 62.843 l
269.31 85.543 l
257.51 85.74 l
257.001 32.64 l
289.801 32.091 l
f
334 41.5 m
319.7 41.739 l
320.11 84.639 l
308.31 84.837 l
307.9 41.937 l
293.6 42.176 l
293.502 31.876 l
333.902 31.199 l
f
`;
const approvedStampForm = 
`33.5 13.4 m
404.5 6.92 l
419.6 6.657 431.9 18.52 432.1 33.62 c
432.89 78.92 l
433.153 94.02 421.29 106.32 406.19 106.52 c
35.19 113 l
20.09 113.263 7.79 101.4 7.59 86.3 c
6.8 41 l
6.537 25.9 18.4 13.6 33.5 13.4 c
s
88.9 86.4 m
78 86.585 l
75.08 76.895 l
59.88 77.153 l
57.14 86.933 l
46.54 87.114 l
61.24 38.714 l
73.34 38.508 l
h
72.4 68.1 m
67.21 50.9 l
62.35 68.3 l
f
128 52.8 m
128.02 54.953 127.72 57.073 127.098 59.16 c
126.477 61.22 125.577 62.96 124.398 64.38 c
122.785 66.307 120.975 67.77 118.968 68.77 c
116.981 69.777 114.495 70.303 111.508 70.35 c
104.938 70.462 l
105.086 86.162 l
94.586 86.341 l
94.132 38.141 l
111.532 37.846 l
114.132 37.802 116.322 38.034 118.102 38.543 c
119.902 39.03 121.492 39.79 122.872 40.823 c
124.532 42.07 125.802 43.676 126.682 45.643 c
127.582 47.61 128.045 49.986 128.072 52.773 c
h
117.1 53.276 m
117.087 51.916 116.765 50.756 116.133 49.796 c
115.501 48.816 114.771 48.139 113.943 47.766 c
112.836 47.267 111.763 47.005 110.723 46.98 c
109.676 46.933 108.283 46.924 106.543 46.954 c
104.733 46.985 l
104.869 61.385 l
107.889 61.333 l
109.682 61.303 111.156 61.149 112.309 60.87 c
113.476 60.592 114.449 60.058 115.229 59.27 c
115.902 58.57 116.379 57.744 116.659 56.79 c
116.961 55.817 117.106 54.64 117.093 53.26 c
f
170 52.1 m
170.02 54.253 169.72 56.373 169.098 58.46 c
168.477 60.52 167.577 62.26 166.398 63.68 c
164.785 65.607 162.975 67.07 160.968 68.07 c
158.981 69.077 156.495 69.603 153.508 69.65 c
146.938 69.762 l
147.086 85.462 l
136.586 85.641 l
136.132 37.441 l
153.532 37.146 l
156.132 37.102 158.322 37.334 160.102 37.843 c
161.902 38.33 163.492 39.09 164.872 40.123 c
166.532 41.37 167.802 42.976 168.682 44.943 c
169.582 46.91 170.045 49.286 170.072 52.073 c
h
159.1 52.576 m
159.087 51.216 158.765 50.056 158.133 49.096 c
157.501 48.116 156.771 47.439 155.943 47.066 c
154.836 46.567 153.763 46.305 152.723 46.28 c
151.676 46.233 150.283 46.224 148.543 46.254 c
146.733 46.285 l
146.869 60.685 l
149.889 60.633 l
151.682 60.603 153.156 60.449 154.309 60.17 c
155.476 59.892 156.449 59.358 157.229 58.57 c
157.902 57.87 158.379 57.044 158.659 56.09 c
158.961 55.117 159.106 53.94 159.093 52.56 c
f
200 51.1 m
199.989 49.893 199.768 48.863 199.339 48.01 c
198.91 47.157 198.18 46.49 197.149 46.01 c
196.429 45.677 195.592 45.487 194.639 45.438 c
193.686 45.368 192.576 45.344 191.309 45.365 c
187.489 45.43 l
187.611 58.43 l
190.851 58.375 l
192.538 58.346 193.948 58.225 195.081 58.012 c
196.214 57.799 197.161 57.342 197.921 56.642 c
198.648 55.962 199.171 55.219 199.491 54.412 c
199.831 53.585 199.995 52.492 199.982 51.132 c
h
216.8 84.2 m
203.9 84.419 l
192.6 66.919 l
187.74 67.002 l
187.906 84.702 l
177.406 84.88 l
176.952 36.68 l
194.652 36.379 l
197.072 36.338 199.152 36.464 200.892 36.758 c
202.632 37.052 204.269 37.725 205.802 38.778 c
207.349 39.831 208.579 41.211 209.492 42.918 c
210.425 44.604 210.902 46.741 210.922 49.328 c
210.956 52.888 210.279 55.801 208.892 58.068 c
207.519 60.334 205.539 62.234 202.952 63.768 c
f
261 59.4 m
261.073 67.067 259.263 73.2 255.57 77.8 c
251.877 82.373 246.743 84.713 240.17 84.82 c
233.597 84.932 228.43 82.765 224.67 78.32 c
220.89 73.853 218.963 67.787 218.89 60.12 c
218.817 52.387 220.627 46.253 224.32 41.72 c
228.013 37.147 233.147 34.807 239.72 34.7 c
246.273 34.589 251.44 36.755 255.22 41.2 c
259.013 45.62 260.947 51.687 261.02 59.4 c
h
247.1 71.8 m
248.113 70.313 248.857 68.577 249.33 66.59 c
249.805 64.577 250.03 62.223 250.005 59.53 c
249.978 56.643 249.671 54.19 249.084 52.17 c
248.497 50.15 247.741 48.523 246.814 47.29 c
245.867 46.01 244.777 45.09 243.544 44.53 c
242.331 43.968 241.064 43.698 239.744 43.721 c
238.404 43.744 237.144 44.045 235.964 44.626 c
234.797 45.207 233.724 46.153 232.744 47.466 c
231.837 48.686 231.101 50.369 230.534 52.516 c
229.986 54.636 229.725 57.099 229.752 59.906 c
229.779 62.773 230.077 65.216 230.645 67.236 c
231.232 69.229 231.988 70.856 232.915 72.116 c
233.842 73.376 234.922 74.296 236.155 74.876 c
237.388 75.459 238.682 75.739 240.035 75.716 c
241.388 75.693 242.675 75.369 243.895 74.745 c
245.115 74.099 246.178 73.122 247.085 71.815 c
f
306 34.6 m
291.5 83 l
279.7 83.201 l
264.3 35.301 l
275.4 35.113 l
285.6 68.813 l
295.17 34.813 l
f
342 82.1 m
312.4 82.603 l
311.946 34.403 l
341.546 33.9 l
341.634 43.22 l
322.534 43.544 l
322.612 51.854 l
340.312 51.553 l
340.4 60.873 l
322.7 61.174 l
322.812 73.074 l
341.912 72.75 l
f
389 57.3 m
389.042 61.787 388.209 65.82 386.5 69.4 c
384.793 72.967 382.62 75.72 379.98 77.66 c
378 79.12 375.82 80.15 373.44 80.75 c
371.067 81.351 368.25 81.68 364.99 81.735 c
350.59 81.98 l
350.136 33.78 l
364.936 33.528 l
368.269 33.471 371.146 33.757 373.566 34.384 c
375.993 34.99 378.033 35.883 379.686 37.064 c
382.526 39.044 384.769 41.744 386.416 45.164 c
388.076 48.564 388.929 52.597 388.976 57.264 c
h
378.1 57.388 m
378.07 54.222 377.55 51.525 376.54 49.298 c
375.547 47.052 373.983 45.308 371.85 44.068 c
370.763 43.461 369.65 43.058 368.51 42.858 c
367.39 42.64 365.693 42.551 363.42 42.589 c
360.76 42.634 l
361.044 72.734 l
363.704 72.689 l
366.211 72.647 368.051 72.486 369.224 72.207 c
370.391 71.907 371.531 71.391 372.644 70.657 c
374.557 69.331 375.951 67.581 376.824 65.407 c
377.704 63.214 378.127 60.521 378.094 57.327 c
f
`;
const notApprovedStampForm = 
`33.5 13.4 m
404.5 6.92 l
419.6 6.657 431.9 18.52 432.1 33.62 c
432.89 78.92 l
433.153 94.02 421.29 106.32 406.19 106.52 c
35.19 113 l
20.09 113.263 7.79 101.4 7.59 86.3 c
6.8 41 l
6.537 25.9 18.4 13.6 33.5 13.4 c
s
57.1 85.5 m
49.12 85.636 l
35.32 55.036 l
35.469 85.936 l
27.879 86.066 l
27.662 41.066 l
37.562 40.897 l
49.362 66.497 l
49.238 40.697 l
56.828 40.567 l
f
96.4 62.4 m
96.435 69.533 94.995 75.267 92.08 79.6 c
89.167 83.86 85.133 86.033 79.98 86.12 c
74.82 86.208 70.753 84.175 67.78 80.02 c
64.827 75.84 63.333 70.173 63.3 63.02 c
63.265 55.82 64.705 50.087 67.62 45.82 c
70.533 41.56 74.567 39.387 79.72 39.3 c
84.867 39.212 88.933 41.245 91.92 45.4 c
94.887 49.533 96.387 55.2 96.42 62.4 c
h
85.5 74 m
86.3 72.62 86.89 71 87.27 69.14 c
87.649 67.26 87.833 65.063 87.82 62.55 c
87.807 59.85 87.573 57.56 87.118 55.68 c
86.663 53.793 86.073 52.273 85.348 51.12 c
84.608 49.927 83.755 49.067 82.788 48.54 c
81.835 48.013 80.841 47.758 79.808 47.776 c
78.761 47.794 77.771 48.073 76.838 48.612 c
75.918 49.151 75.075 50.031 74.308 51.252 c
73.595 52.392 73.011 53.962 72.558 55.962 c
72.122 57.942 71.91 60.242 71.923 62.862 c
71.936 65.542 72.163 67.822 72.603 69.702 c
73.058 71.569 73.648 73.089 74.373 74.262 c
75.1 75.435 75.946 76.295 76.913 76.842 c
77.88 77.389 78.893 77.654 79.953 77.635 c
81.02 77.617 82.033 77.318 82.993 76.738 c
83.953 76.138 84.79 75.228 85.503 74.008 c
f
128 48 m
118 48.172 l
118.175 84.472 l
109.895 84.614 l
109.72 48.314 l
99.72 48.486 l
99.678 39.786 l
127.978 39.301 l
f
178 83.4 m
169.44 83.546 l
167.18 74.496 l
155.28 74.7 l
153.1 83.83 l
144.76 83.973 l
156.36 38.773 l
165.89 38.61 l
h
165.1 66.3 m
161.08 50.2 l
157.21 66.4 l
f
209 52.1 m
209.01 54.113 208.768 56.09 208.274 58.03 c
207.78 59.95 207.07 61.573 206.144 62.9 c
204.871 64.693 203.447 66.057 201.874 66.99 c
200.314 67.923 198.361 68.41 196.014 68.45 c
190.864 68.538 l
190.935 83.138 l
182.655 83.28 l
182.438 38.28 l
196.038 38.047 l
198.078 38.012 199.798 38.235 201.198 38.714 c
202.611 39.173 203.858 39.886 204.938 40.854 c
206.238 42.021 207.231 43.524 207.918 45.364 c
208.618 47.204 208.974 49.421 208.988 52.014 c
h
200.44 52.518 m
200.434 51.251 200.184 50.168 199.691 49.268 c
199.198 48.348 198.628 47.715 197.981 47.368 c
197.114 46.9 196.271 46.653 195.451 46.626 c
194.631 46.58 193.538 46.568 192.171 46.592 c
190.751 46.616 l
190.816 60.116 l
193.186 60.075 l
194.593 60.051 195.749 59.911 196.656 59.653 c
197.576 59.396 198.343 58.899 198.956 58.163 c
199.485 57.51 199.861 56.74 200.086 55.853 c
200.326 54.947 200.443 53.847 200.437 52.553 c
f
241 51.6 m
241.01 53.613 240.768 55.59 240.274 57.53 c
239.78 59.45 239.07 61.073 238.144 62.4 c
236.871 64.193 235.447 65.557 233.874 66.49 c
232.314 67.423 230.361 67.91 228.014 67.95 c
222.864 68.038 l
222.935 82.638 l
214.655 82.78 l
214.438 37.78 l
228.038 37.547 l
230.078 37.512 231.798 37.735 233.198 38.214 c
234.611 38.673 235.858 39.386 236.938 40.354 c
238.238 41.521 239.231 43.024 239.918 44.864 c
240.618 46.704 240.974 48.921 240.988 51.514 c
h
232.44 52.018 m
232.434 50.751 232.184 49.668 231.691 48.768 c
231.198 47.848 230.628 47.215 229.981 46.868 c
229.114 46.4 228.271 46.153 227.451 46.126 c
226.631 46.08 225.538 46.068 224.171 46.092 c
222.751 46.116 l
222.816 59.616 l
225.186 59.575 l
226.593 59.551 227.749 59.411 228.656 59.153 c
229.576 58.896 230.343 58.399 230.956 57.663 c
231.485 57.01 231.861 56.24 232.086 55.353 c
232.326 54.447 232.443 53.347 232.437 52.053 c
f
265 50.7 m
264.995 49.573 264.825 48.61 264.49 47.81 c
264.155 47.01 263.585 46.387 262.78 45.94 c
262.218 45.627 261.565 45.447 260.82 45.4 c
260.073 45.332 259.203 45.307 258.21 45.324 c
255.21 45.375 l
255.269 57.475 l
257.809 57.432 l
259.129 57.409 260.235 57.299 261.129 57.103 c
262.022 56.906 262.769 56.479 263.369 55.823 c
263.941 55.189 264.354 54.499 264.609 53.753 c
264.878 52.986 265.01 51.966 265.004 50.693 c
h
278.1 81.7 m
268 81.873 l
259.17 65.573 l
255.35 65.638 l
255.43 82.138 l
247.19 82.279 l
246.973 37.279 l
260.873 37.041 l
262.773 37.009 264.406 37.132 265.773 37.41 c
267.139 37.689 268.423 38.322 269.623 39.31 c
270.836 40.297 271.799 41.59 272.513 43.19 c
273.239 44.77 273.609 46.767 273.623 49.18 c
273.639 52.5 273.099 55.217 272.003 57.33 c
270.923 59.444 269.366 61.21 267.333 62.63 c
f
313 58.7 m
313.035 65.833 311.595 71.567 308.68 75.9 c
305.767 80.16 301.733 82.333 296.58 82.42 c
291.42 82.508 287.353 80.475 284.38 76.32 c
281.427 72.14 279.933 66.473 279.9 59.32 c
279.865 52.12 281.305 46.387 284.22 42.12 c
287.133 37.86 291.167 35.687 296.32 35.6 c
301.467 35.512 305.533 37.545 308.52 41.7 c
311.487 45.833 312.987 51.5 313.02 58.7 c
h
302.1 70.3 m
302.9 68.92 303.49 67.3 303.87 65.44 c
304.249 63.56 304.433 61.363 304.42 58.85 c
304.407 56.15 304.173 53.86 303.718 51.98 c
303.263 50.093 302.673 48.573 301.948 47.42 c
301.208 46.227 300.355 45.367 299.388 44.84 c
298.435 44.313 297.441 44.058 296.408 44.076 c
295.361 44.094 294.371 44.373 293.438 44.912 c
292.518 45.451 291.675 46.331 290.908 47.552 c
290.195 48.692 289.611 50.262 289.158 52.262 c
288.722 54.242 288.51 56.542 288.523 59.162 c
288.536 61.842 288.763 64.122 289.203 66.002 c
289.658 67.869 290.248 69.389 290.973 70.562 c
291.7 71.735 292.546 72.595 293.513 73.142 c
297.62 73.917 298.633 73.618 299.593 73.038 c
300.553 72.438 301.39 71.528 302.103 70.308 c
f
348 35.6 m
336.5 80.8 l
327.23 80.959 l
315.33 36.159 l
324.02 36.01 l
331.93 67.41 l
339.54 35.71 l
f
376 80 m
352.8 80.397 l
352.583 35.397 l
375.783 35 l
375.825 43.7 l
360.825 43.956 l
360.863 51.716 l
374.762 51.478 l
374.804 60.178 l
360.904 60.416 l
360.958 71.516 l
375.958 71.26 l
f
413 57 m
413.02 61.187 412.357 64.953 411.01 68.3 c
409.663 71.627 407.95 74.193 405.87 76 c
404.31 77.353 402.597 78.31 400.73 78.87 c
398.863 79.425 396.65 79.725 394.09 79.769 c
382.79 79.963 l
382.573 34.963 l
394.173 34.764 l
396.786 34.719 399.043 34.993 400.943 35.584 c
402.843 36.155 404.443 36.992 405.743 38.094 c
407.963 39.947 409.713 42.474 410.993 45.674 c
412.286 48.854 412.943 52.621 412.963 56.974 c
h
404.44 57.056 m
404.426 54.096 404.026 51.576 403.24 49.496 c
402.467 47.396 401.243 45.766 399.57 44.606 c
398.717 44.037 397.847 43.66 396.96 43.476 c
396.08 43.269 394.75 43.181 392.97 43.212 c
390.88 43.248 l
391.016 71.348 l
393.106 71.312 l
395.073 71.278 396.516 71.133 397.436 70.876 c
398.356 70.599 399.253 70.122 400.126 69.446 c
401.626 68.213 402.726 66.583 403.426 64.556 c
404.119 62.509 404.459 59.996 404.446 57.016 c
f
`;
const departmentalStampForm = 
`33.5 13.4 m
404.5 6.92 l
419.6 6.657 431.9 18.52 432.1 33.62 c
432.89 78.92 l
433.153 94.02 421.29 106.32 406.19 106.52 c
35.19 113 l
20.09 113.263 7.79 101.4 7.59 86.3 c
6.8 41 l
6.537 25.9 18.4 13.6 33.5 13.4 c
s
56.4 63.1 m
56.412 67.46 55.746 71.393 54.4 74.9 c
53.06 78.36 51.36 81.03 49.3 82.91 c
47.753 84.317 46.053 85.31 44.2 85.89 c
26.42 86.996 l
26.286 40.196 l
37.786 40.009 l
40.379 39.967 42.616 40.256 44.496 40.875 c
46.376 41.474 47.959 42.35 49.246 43.505 c
51.446 45.438 53.176 48.072 54.436 51.405 c
55.709 54.718 56.353 58.652 56.366 63.205 c
h
47.92 63.143 m
47.911 60.063 47.518 57.437 46.74 55.263 c
45.98 53.077 44.773 51.377 43.12 50.163 c
42.28 49.569 41.417 49.175 40.53 48.983 c
39.663 48.767 38.347 48.673 36.58 48.701 c
34.51 48.735 l
34.594 78.035 l
36.664 78.001 l
38.617 77.97 40.047 77.821 40.954 77.554 c
41.867 77.267 42.757 76.77 43.624 76.064 c
45.117 74.784 46.207 73.088 46.894 70.974 c
47.587 68.848 47.927 66.231 47.914 63.124 c
f
85.8 86 m
62.8 86.373 l
62.666 39.573 l
85.666 39.2 l
85.692 48.26 l
70.892 48.501 l
70.915 56.581 l
84.715 56.357 l
84.741 65.417 l
70.941 65.641 l
70.974 77.241 l
85.774 77 l
f
119 53.4 m
119.006 55.493 118.763 57.553 118.27 59.58 c
117.777 61.58 117.071 63.27 116.15 64.65 c
114.89 66.517 113.477 67.933 111.91 68.9 c
110.363 69.867 108.43 70.37 106.11 70.41 c
101.01 70.493 l
101.054 85.793 l
92.854 85.926 l
92.72 39.126 l
106.22 38.907 l
108.24 38.874 109.943 39.108 111.33 39.61 c
112.723 40.091 113.956 40.837 115.03 41.85 c
116.316 43.063 117.296 44.63 117.97 46.55 c
118.656 48.47 119.003 50.78 119.01 53.48 c
h
110.52 53.821 m
110.516 52.501 110.271 51.374 109.784 50.441 c
109.297 49.488 108.734 48.824 108.094 48.451 c
107.241 47.962 106.407 47.703 105.594 47.674 c
104.781 47.624 103.697 47.61 102.344 47.632 c
100.934 47.655 l
100.974 61.655 l
103.324 61.617 l
104.717 61.595 105.864 61.45 106.764 61.184 c
107.677 60.918 108.437 60.401 109.044 59.634 c
109.569 58.954 109.945 58.151 110.174 57.224 c
110.413 56.278 110.531 55.134 110.527 53.794 c
f
154 84.9 m
145.52 85.038 l
143.29 75.608 l
131.49 75.799 l
129.32 85.299 l
121.06 85.433 l
132.66 38.433 l
142.1 38.28 l
h
141.3 67.1 m
137.34 50.4 l
133.48 67.3 l
f
176 52 m
175.997 50.827 175.83 49.823 175.5 48.99 c
175.17 48.157 174.607 47.507 173.81 47.04 c
173.254 46.713 172.604 46.525 171.86 46.474 c
171.12 46.402 170.26 46.374 169.28 46.39 c
166.31 46.438 l
166.346 59.038 l
168.866 58.998 l
170.173 58.976 171.269 58.864 172.156 58.662 c
173.036 58.458 173.776 58.015 174.376 57.332 c
174.943 56.672 175.353 55.952 175.606 55.172 c
175.874 54.372 176.006 53.312 176.003 51.992 c
h
188.9 84.3 m
178.9 84.463 l
170.18 67.463 l
166.4 67.524 l
166.449 84.724 l
158.289 84.856 l
158.155 38.056 l
171.955 37.833 l
173.835 37.803 175.452 37.934 176.805 38.226 c
178.158 38.519 179.428 39.179 180.615 40.206 c
181.815 41.233 182.765 42.58 183.465 44.246 c
184.178 45.893 184.542 47.973 184.555 50.486 c
184.565 53.946 184.025 56.776 182.935 58.976 c
181.862 61.176 180.315 63.016 178.295 64.496 c
f
218 46.1 m
208.07 46.261 l
208.178 84.061 l
199.978 84.194 l
199.87 46.394 l
189.94 46.555 l
189.914 37.495 l
218.014 37.039 l
f
256 83.2 m
247.84 83.332 l
247.75 51.932 l
241.91 72.332 l
236.25 72.424 l
230.3 52.124 l
230.39 83.524 l
222.66 83.65 l
222.526 36.85 l
232.046 36.695 l
239.266 60.095 l
246.336 36.495 l
255.856 36.34 l
f
287 82.7 m
264 83.073 l
263.866 36.273 l
286.866 35.9 l
286.892 44.96 l
272.092 45.201 l
272.115 53.281 l
285.915 53.057 l
285.941 62.117 l
272.141 62.341 l
272.174 73.941 l
286.974 73.7 l
f
323 82.2 m
315.1 82.328 l
301.5 50.428 l
301.592 82.528 l
294.072 82.65 l
293.938 35.85 l
303.738 35.691 l
315.438 62.291 l
315.361 35.491 l
322.881 35.369 l
f
356 43.9 m
346.07 44.061 l
346.178 81.861 l
337.978 81.994 l
337.87 44.194 l
327.94 44.355 l
327.914 35.295 l
356.014 34.839 l
f
390 81.1 m
381.52 81.238 l
379.29 71.808 l
367.49 71.999 l
365.32 81.499 l
357.06 81.633 l
368.66 34.633 l
378.1 34.48 l
h
377.3 63.3 m
373.34 46.6 l
369.48 63.5 l
f
418 80.6 m
395.1 80.972 l
394.966 34.172 l
403.166 34.039 l
403.274 71.839 l
417.974 71.6 l
f
`;

export class StampAnnotation extends MarkupAnnotation {
  /**
   * (Optional) The name of an icon that shall be used in displaying the annotation
   */
  Name: StampType | string = stampTypes.DRAFT;
  
  protected constructor() {
    super(annotationTypes.STAMP);
  }

  static createStandard(type: StampType): StampAnnotation {
    const now = DateString.fromDate(new Date());

    const stampForm = new XFormStream();
    stampForm.LastModified = now;
    stampForm.BBox = stampBBox;
    stampForm.Filter = "/FlateDecode";
    let colorString: string;
    switch (type) {
      case "/Draft":        
        stampForm.setTextStreamData(draftStampForm);
        colorString = redColorString;
        break;
      case "/Approved":        
        stampForm.setTextStreamData(approvedStampForm);
        colorString = greenColorString;
        break;
      case "/NotApproved":        
        stampForm.setTextStreamData(notApprovedStampForm);
        colorString = greenColorString;
        break;
      case "/Departmental":        
        stampForm.setTextStreamData(departmentalStampForm);
        colorString = blueColorString;
        break;
      // TODO: add rest of types
      default:
        throw new Error(`Stamp type '${type}' is not supported`);
    }

    const stampApStream = new XFormStream();
    stampApStream.LastModified = now;
    stampApStream.BBox = stampBBox;
    stampApStream.Resources = new ResourceDict();
    stampApStream.Resources.setXObject("/Fm", stampForm);
    stampApStream.Filter = "/FlateDecode";
    stampApStream.setTextStreamData(`q 1 0 0 -1 0 ${stampBBox[3]} cm ${colorString} 1 j 8.58 w /Fm Do Q`);

    const stampUuid = getRandomUuid();
    const stampAnnotation = new StampAnnotation();
    stampAnnotation.Name = type;
    stampAnnotation.Rect = halfStampBBox;
    stampAnnotation.Contents = LiteralString.fromString(type.slice(1));
    stampAnnotation.Subj = LiteralString.fromString(type.slice(1));
    stampAnnotation.CreationDate = now;
    stampAnnotation.NM = LiteralString.fromString(stampUuid);
    stampAnnotation.name = stampUuid;
    stampAnnotation.apStream = stampApStream;

    return stampAnnotation;
  }

  static parse(parseInfo: ParseInfo): ParseResult<StampAnnotation> {
    if (!parseInfo) {
      throw new Error("Parsing information not passed");
    }
    try {
      const pdfObject = new StampAnnotation();
      pdfObject.parseProps(parseInfo); 
      const proxy = new Proxy<StampAnnotation>(pdfObject, pdfObject.onChange);
      pdfObject._proxy = proxy;
      return {value: proxy, start: parseInfo.bounds.start, end: parseInfo.bounds.end};
    } catch (e) {
      console.log(e.message);
      return null;
    }
  }  
  
  toArray(cryptInfo?: CryptInfo): Uint8Array {
    const superBytes = super.toArray(cryptInfo);  
    const encoder = new TextEncoder();  
    const bytes: number[] = [];  

    if (this.Name) {
      bytes.push(...encoder.encode("/Name "), ...encoder.encode(this.Name));
    }

    const totalBytes: number[] = [
      ...superBytes.subarray(0, 2), // <<
      ...bytes, 
      ...superBytes.subarray(2, superBytes.length)];
    return new Uint8Array(totalBytes);
  }
  
  /**
   * fill public properties from data using info/parser if available
   */
  protected parseProps(parseInfo: ParseInfo) {
    super.parseProps(parseInfo);
    const {parser, bounds} = parseInfo;
    const start = bounds.contentStart || bounds.start;
    const end = bounds.contentEnd || bounds.end; 

    parser.sliceChars(start, end);
    
    let i = parser.skipToNextName(start, end - 1);
    let name: string;
    let parseResult: ParseResult<string>;
    while (true) {
      parseResult = parser.parseNameAt(i);
      if (parseResult) {
        i = parseResult.end + 1;
        name = parseResult.value;
        switch (name) {
          case "/Name":
            i = this.parseNameProp(name, parser, i);
            break;  
          default:
            // skip to next name
            i = parser.skipToNextName(i, end - 1);
            break;
        }
      } else {
        break;
      }
    };
    
    if (!this.Name) {
      throw new Error("Not all required properties parsed");
    }
  }
}
